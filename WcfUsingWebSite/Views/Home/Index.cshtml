@using WcfUsingWebSite.Models
@model WcfContracts.ComplexJsonObject
<script src="~/Scripts/jquery-2.1.3.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
<script>
    function SubmitPostToServer(e, args) {
        //here we do the jquery post call

    }
    function FillSecondDropDown() {
    FillDropDown($("#SecondC"));
}
    function FillDropDown(dropdown) {

        var path = "http://localhost:62580/api/GetDropDown";
        $.ajax(
        {
            url: path,
            dataType: 'json',
            success: function (data) {
                console.log(data);
                dropdown.empty();
                for (var i = 0; i < data.length; i++) {
                    dropdown.append("<option>" + data[i].Value + "</option>");
                }
            },
            error: function (data) {

                console.log(data);
                alert("Error in Getting Continents");
            },
        });

        dropdown.prop("disabled", false);
    }
    //here we bind the first downdown to document ready


</script>
<script>
    $(document).ready(function () {
        $("#Continents").prop("disabled", true);
        FillDropDown($("#Continents"));
    });
</script>
<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">Examples of filling out dropdowns and website elements using Jquery with WCF on the backend</p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Document Ready</h2>
        <p>Dropdown filled with a API ajax call on Document Ready</p>
        <select id="Continents"></select>
    </div>
    <div class="col-md-4">
        <h2>On Demand</h2>
        <p>
            Dropdown filled with a API ajax call on Demand Ready
        </p>



        <a class="btn btn-info" onclick=FillSecondDropDown()> Fill Data</a>

        <select id="SecondC" disabled="disabled"></select>
    </div>
    <div class="col-md-4">
        <h2>Posting</h2>
        <p>Posting from the website to the server</p>
        @using (@Ajax.BeginForm("SubmitToServer", new AjaxOptions
                                                  {
                                                      UpdateTargetId = "partialUpdateTarget",
                                                      HttpMethod = "POST",
                                                      InsertionMode = InsertionMode.Replace

                                                  }))
        {
            <p>
                @Html.TextBoxFor(md => md.Name)
                <br />

                @Html.TextBoxFor(md => md.Value)


            </p>
            <input type="submit" value="Send Data" />
        }
            <div id="partialUpdateTarget">
                @{ Html.Partial("PostResultView", new PostResult()); }
            </div>
        


    </div>

</div>
